summarySE(., measurevar = "response", groupvars = "stim") %>%
ggplot(., aes(x = stim, y = response)) +
geom_point() +
geom_line(colour = 'blue') +
geom_errorbar(aes(ymin = response - se, ymax = response + se), width=.5) +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
summarySE(., measurevar = "response", groupvars = "stim") %>%
ggplot(., aes(x = stim, y = response)) +
geom_point() +
geom_line(colour = 'blue') +
geom_errorbar(aes(ymin = response - se, ymax = response + se), width=.5) +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
df %>%
summarySE(., measurevar = "response", groupvars = "stim")
df %>%
ggplot(., aes(x = stim, y = response)) +
geom_point() +
geom_line(colour = 'blue') +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
ggplot(., aes(x = stim, y = response)) +
geom_point() +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df
df %>%
group_by(particpant, stim) %>%
summarize(prop = mean(response))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
geom_point() +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
geom_point() +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
geom_point() +
stat_summary(y = mean, geom = 'point') %>%
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
geom_point() +
stat_summary(fun.y = mean, geom = 'point') %>%
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
geom_point()
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
geom_point() +
stat_summary(fun.y = mean, geom = 'point')
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
geom_point() +
stat_summary(fun.y = mean, geom = 'pointrange') +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
geom_point() +
stat_summary(fun.data = mean, geom = 'pointrange') +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
geom_point() +
stat_summary(fun.data = mean_se, geom = 'pointrange') +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.data = mean_se, geom = 'pointrange') +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'point', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'pointrange') +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'point', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'pointrange') +
#scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'point', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'pointrange')
?scale_y_continuous
df %>%
group_by(stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'point', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'pointrange') +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(stim) %>%
summarize(prop = mean(response))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'point', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'pointrange')
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'point', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'pointrange') +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'point', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'pointrange') +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"),
margin = unit(0, "cm"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'point', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'pointrange') +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'pointrange') +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'errorbar') +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'errorbar', width = 0.2) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'errorbar', width = 0.4) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'errorbar', width = 0.6) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'errorbar', width = 0.8) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'red') +
stat_summary(fun.data = mean_se, geom = 'errorbar', width = 1) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'red') +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1, colour = 'red') +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point', size = 0.5) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1, colour = 'red') +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1, colour = 'red') +
stat_summary(fun.y = mean, geom = 'point', size = 0.5) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1, colour = 'red') +
stat_summary(fun.y = mean, geom = 'point', size = 0.75) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1, colour = 'red') +
stat_summary(fun.y = mean, geom = 'point', size = 0.75, colour = 'grey') +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'grey') +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1, colour = 'red') +
stat_summary(fun.y = mean, geom = 'point', size = 0.75) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'grey') +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1, colour = 'red') +
stat_summary(fun.y = mean, geom = 'point', size = 0.75) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 20, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'grey') +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1, colour = 'red') +
stat_summary(fun.y = mean, geom = 'point', size = 0.75) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 20, base_family = "Times New Roman")
glimpse(df)
df %>%
ggplot(., aes(x = stim, y = response)) +
geom_smooth(method = "glm", method.args=list(family="binomial"), lwd = 0.75) +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24) +
theme(legend.position = c(0.11, 0.89), legend.background = element_rect(fill = "transparent"),
legend.margin = unit(0, "cm"))
df %>%
ggplot(., aes(x = stim, y = response)) +
geom_smooth(method = "glm", method.args=list(family="binomial"), lwd = 0.75) +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24) +
theme(legend.position = c(0.11, 0.89), legend.background = element_rect(fill = "transparent"))
df %>%
ggplot(., aes(x = stim, y = response)) +
geom_smooth(method = "glm", method.args=list(family="binomial"), lwd = 0.75) +
scale_y_continuous(breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 20) +
theme(legend.position = c(0.11, 0.89), legend.background = element_rect(fill = "transparent"))
df %>%
group_by(participant, stim) %>%
summarize(prop = mean(response)) %>%
ggplot(., aes(x = stim, y = prop)) +
stat_summary(fun.y = mean, geom = 'line', colour = 'grey') +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 1, colour = 'red') +
stat_summary(fun.y = mean, geom = 'point', size = 0.75) +
scale_y_continuous(limits = c(-0.1, 1.1), breaks = c(0, 0.5, 1), labels = c("pa", "50%", "ba")) +
ylab("Response") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 20, base_family = "Times New Roman") +
theme(legend.position = "right", legend.background = element_rect(fill = "transparent"))
df %>%
aggregate(rt ~ stim + participant, data = ., FUN = mean) %>%
ggplot(., aes(x = stim, y = rt)) +
geom_jitter(size = 1.15) +
ylim(0, 1) +
geom_smooth(lwd = 0.85) +
ylab("RT (ms)") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 24) +
theme(legend.position = c(0.11, 0.89), legend.background = element_rect(fill = "transparent"))
df %>%
aggregate(rt ~ stim + participant, data = ., FUN = mean) %>%
ggplot(., aes(x = stim, y = rt)) +
geom_jitter(size = 1.15) +
ylim(0, 1) +
geom_smooth(lwd = 0.85) +
ylab("RT (ms)") + xlab("VOT (ms)") +
scale_x_continuous(breaks = seq(from = -60, to = 60, by = 10), labels = seq(from = -60, to = 60, by = 10)) +
theme_bw(base_size = 20) +
theme(legend.position = c(0.11, 0.89), legend.background = element_rect(fill = "transparent"))
slidify('index.html')
